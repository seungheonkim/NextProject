{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gimseungheon/Documents/NextProject/pages/index.js\",\n    _this = this;\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React MeetUps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n}; //static generation , pre fetching data to the page\n//getStaticProps : 해당 이름을 보면 component 불러내기 전에 먼저 실행함\n//이걸로 먼저 페이지 렌더링 전에 데이터 불러오고 나서 client 에 보여준다\n//during the build process!!!\n//build 과정에서만 보여지기 때문에 정보 업데이트가 되지 않음\n//revalidate 가 필요함 => regenerate 과정을 만든다!!\n//revalidate : 1 => 1초마다 데이터 갱신\n\n\n_c = HomePage;\n//dynamically 갱신 하고 싶다면 server-side rendering 을 사용하자!!\n//only server-side! runs on the server!!\n// export const getServerSideProps = async (context) => {\n//     const request = context.req;\n//     const response = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/gimseungheon/Documents/NextProject/pages/index.js"],"names":["MeetupList","Head","HomePage","props","meetups"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAII,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aAJJ;AAAA,kBADJ;AAQH,CATD,C,CAWA;AACA;AACA;AACA;AAEA;AACA;AACA;;;KAlBMF,Q;AA8CN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeA,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\nimport {MongoClient} from \"mongodb\";\nimport Head from \"next/head\";\n\nconst HomePage = (props) => {\n    return (\n        <>\n            <Head>\n                <title>React MeetUps</title>\n            </Head>\n            <MeetupList meetups={props.meetups}/>\n        </>\n    )\n};\n\n//static generation , pre fetching data to the page\n//getStaticProps : 해당 이름을 보면 component 불러내기 전에 먼저 실행함\n//이걸로 먼저 페이지 렌더링 전에 데이터 불러오고 나서 client 에 보여준다\n//during the build process!!!\n\n//build 과정에서만 보여지기 때문에 정보 업데이트가 되지 않음\n//revalidate 가 필요함 => regenerate 과정을 만든다!!\n//revalidate : 1 => 1초마다 데이터 갱신\n\nexport const getStaticProps = async () => {\n    //fetch data from an API\n    const client = await MongoClient.connect('mongodb+srv://seungheon818:ch00191919!@cluster0.bob9ydu.mongodb.net/meetups?retryWrites=true&w=majority');\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find().toArray();\n\n    await client.close();\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                image: meetup.image,\n                address: meetup.address,\n                description: meetup.description,\n                id: meetup._id.toString(),\n            }))\n        },\n        revalidate: 1,\n    };\n};\n\n//dynamically 갱신 하고 싶다면 server-side rendering 을 사용하자!!\n//only server-side! runs on the server!!\n// export const getServerSideProps = async (context) => {\n//     const request = context.req;\n//     const response = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}