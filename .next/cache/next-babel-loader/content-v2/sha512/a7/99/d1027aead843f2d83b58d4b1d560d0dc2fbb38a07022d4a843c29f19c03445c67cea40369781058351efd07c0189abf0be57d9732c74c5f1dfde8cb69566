{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gimseungheon/Documents/NextProject/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: 'description',\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}; //getStaticPath : 당연히 데이터도 미리 만들어 놓기 때문에 경로 url 들도 미리 만들어 놓아야 한다\n\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://seungheon818:ch00191919!@cluster0.bob9ydu.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  await client.close();\n  return {\n    fallback: false,\n    //밑에 해당하는 path 들만 미리 생성해놓도록 설정 (true 일경우)\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}; //static site generation(SSG)\n\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://seungheon818:ch00191919!@cluster0.bob9ydu.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  await client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n        address: selectedMeetup.address\n      }\n    }\n  };\n};\nexport default MeetupDetailPage;","map":{"version":3,"sources":["/Users/gimseungheon/Documents/NextProject/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Head","MeetupDetailPage","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAE,aADV;AAEI,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAF9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAD5B;AAEI,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAF5B;AAGI,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH9B;AAII,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJlC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAiBH,CAlBD,C,CAoBA;;;AACA,OAAO,MAAMG,cAAc,GAAG,YAAY;AACtC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,yGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEA,QAAMR,MAAM,CAACS,KAAP,EAAN;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AACa;AAChBC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFJ,GAAP;AAIH,CAdM,C,CAgBP;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,yGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAE,IAAIjB,QAAJ,CAAayB,QAAb;AAAN,GAA1B,CAA7B;AAEA,QAAMf,MAAM,CAACS,KAAP,EAAN;AAEA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR2B,QAAAA,EAAE,EAAEF,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAERrB,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFd;AAGRE,QAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAHd;AAIRD,QAAAA,WAAW,EAAEuB,cAAc,CAACvB,WAJpB;AAKRE,QAAAA,OAAO,EAAEqB,cAAc,CAACrB;AALhB;AADT;AADJ,GAAP;AAWH,CAvBM;AAyBP,eAAeN,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient, ObjectId} from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetupDetailPage = (props) => {\n    return (\n        <>\n            <Head>\n                <title>{props.meetupData.title}</title>\n                <meta\n                    name={'description'}\n                    content={props.meetupData.description}\n                />\n            </Head>\n            <MeetupDetail\n                image={props.meetupData.image}\n                title={props.meetupData.title}\n                address={props.meetupData.address}\n                description={props.meetupData.description}\n            />\n        </>\n    )\n};\n\n//getStaticPath : 당연히 데이터도 미리 만들어 놓기 때문에 경로 url 들도 미리 만들어 놓아야 한다\nexport const getStaticPaths = async () => {\n    const client = await MongoClient.connect('mongodb+srv://seungheon818:ch00191919!@cluster0.bob9ydu.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    await client.close();\n\n    return {\n        fallback: false,//밑에 해당하는 path 들만 미리 생성해놓도록 설정 (true 일경우)\n        paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\n    }\n};\n\n//static site generation(SSG)\nexport const getStaticProps = async (context) => {\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect('mongodb+srv://seungheon818:ch00191919!@cluster0.bob9ydu.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({_id: new ObjectId(meetupId)});\n\n    await client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description,\n                address: selectedMeetup.address,\n            }\n        }\n    }\n}\n\nexport default MeetupDetailPage;"]},"metadata":{},"sourceType":"module"}