{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gimseungheon/Documents/NextProject/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetailPage = function MeetupDetailPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n}; //getStaticPath : 당연히 데이터도 미리 만들어 놓기 때문에 경로 url 들도 미리 만들어 놓아야 한다\n\n\n_c = MeetupDetailPage;\nexport var __N_SSG = true;\nexport default MeetupDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailPage\");","map":{"version":3,"sources":["/Users/gimseungheon/Documents/NextProject/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetailPage","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChC,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CATD,C,CAWA;;;KAXMN,gB;;AAsDN,eAAeA,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient, ObjectId} from \"mongodb\";\nimport {mongoConnectionUrl} from \"../api/new-meetup\";\n\nconst MeetupDetailPage = (props) => {\n    return (\n        <MeetupDetail\n            image={props.meetupData.image}\n            title={props.meetupData.title}\n            address={props.meetupData.address}\n            description={props.meetupData.description}\n        />\n    )\n};\n\n//getStaticPath : 당연히 데이터도 미리 만들어 놓기 때문에 경로 url 들도 미리 만들어 놓아야 한다\nexport const getStaticPaths = async () => {\n    const client = await MongoClient.connect(mongoConnectionUrl);\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    await client.close();\n\n    return {\n        fallback: false,//밑에 해당하는 path 들만 미리 생성해놓도록 설정 (true 일경우)\n        paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\n    }\n};\n\n//static site generation(SSG)\nexport const getStaticProps = async (context) => {\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect(mongoConnectionUrl);\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n\n    await client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description,\n                address: selectedMeetup.address,\n            }\n        }\n    }\n}\n\nexport default MeetupDetailPage;"]},"metadata":{},"sourceType":"module"}