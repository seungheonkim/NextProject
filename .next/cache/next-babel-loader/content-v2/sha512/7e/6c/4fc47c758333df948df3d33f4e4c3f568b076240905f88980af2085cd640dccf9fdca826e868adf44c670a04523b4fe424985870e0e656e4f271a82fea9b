{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gimseungheon/Documents/NextProject/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nimport { mongoConnectionUrl } from \"./api/new-meetup\";\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A first meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Oesterlars_Kirke_Bornholm_Denmark.jpg/500px-Oesterlars_Kirke_Bornholm_Denmark.jpg',\n  address: 'address 111, 11111 city',\n  description: 'first thing'\n}, {\n  id: 'm2',\n  title: 'A second meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Oesterlars_Kirke_Bornholm_Denmark.jpg/500px-Oesterlars_Kirke_Bornholm_Denmark.jpg',\n  address: 'address 222, 22222 city',\n  description: 'second thing'\n}, {\n  id: 'm3',\n  title: 'A third meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Oesterlars_Kirke_Bornholm_Denmark.jpg/500px-Oesterlars_Kirke_Bornholm_Denmark.jpg',\n  address: 'address 333, 33333 city',\n  description: 'third thing'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}; //static generation , pre fetching data to the page\n//getStaticProps : 해당 이름을 보면 component 불러내기 전에 먼저 실행함\n//이걸로 먼저 페이지 렌더링 전에 데이터 불러오고 나서 client 에 보여준다\n//during the build process!!!\n//build 과정에서만 보여지기 때문에 정보 업데이트가 되지 않음\n//revalidate 가 필요함 => regenerate 과정을 만든다!!\n//revalidate : 1 => 1초마다 데이터 갱신\n\n\nexport const getStaticProps = async () => {\n  //fetch data from an API\n  const client = await MongoClient.connect(mongoConnectionUrl);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  await client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n        id: meetup.id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}; //dynamically 갱신 하고 싶다면 server-side rendering 을 사용하자!!\n//only server-side! runs on the server!!\n// export const getServerSideProps = async (context) => {\n//     const request = context.req;\n//     const response = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/gimseungheon/Documents/NextProject/pages/index.js"],"names":["MeetupList","MongoClient","mongoConnectionUrl","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","toString","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,6IAHX;AAIIC,EAAAA,OAAO,EAAE,yBAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,KAAK,EAAE,6IAHX;AAIIC,EAAAA,OAAO,EAAE,yBAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,EAelB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,6IAHX;AAIIC,EAAAA,OAAO,EAAE,yBAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CAfkB,CAAtB;;AAyBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBACI,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAJD,C,CAMA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBZ,kBAApB,CAArB;AAEA,QAAMa,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEA,QAAMN,MAAM,CAACO,KAAP,EAAN;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADc;AAE5BC,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAFc;AAG5BC,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAHY;AAI5BC,QAAAA,WAAW,EAAEc,MAAM,CAACd,WAJQ;AAK5BJ,QAAAA,EAAE,EAAEkB,MAAM,CAAClB,EAAP,CAAUmB,QAAV;AALwB,OAAL,CAAlB;AADN,KADJ;AAUHC,IAAAA,UAAU,EAAE;AAVT,GAAP;AAYH,CAxBM,C,CA0BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAef,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\nimport {MongoClient} from \"mongodb\";\nimport {mongoConnectionUrl} from \"./api/new-meetup\";\n\nconst DUMMY_MEETUPS = [\n    {\n        id: 'm1',\n        title: 'A first meetup',\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Oesterlars_Kirke_Bornholm_Denmark.jpg/500px-Oesterlars_Kirke_Bornholm_Denmark.jpg',\n        address: 'address 111, 11111 city',\n        description: 'first thing'\n    },\n    {\n        id: 'm2',\n        title: 'A second meetup',\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Oesterlars_Kirke_Bornholm_Denmark.jpg/500px-Oesterlars_Kirke_Bornholm_Denmark.jpg',\n        address: 'address 222, 22222 city',\n        description: 'second thing'\n    },\n    {\n        id: 'm3',\n        title: 'A third meetup',\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Oesterlars_Kirke_Bornholm_Denmark.jpg/500px-Oesterlars_Kirke_Bornholm_Denmark.jpg',\n        address: 'address 333, 33333 city',\n        description: 'third thing'\n    },\n]\n\n\nconst HomePage = (props) => {\n    return (\n        <MeetupList meetups={props.meetups}/>\n    )\n};\n\n//static generation , pre fetching data to the page\n//getStaticProps : 해당 이름을 보면 component 불러내기 전에 먼저 실행함\n//이걸로 먼저 페이지 렌더링 전에 데이터 불러오고 나서 client 에 보여준다\n//during the build process!!!\n\n//build 과정에서만 보여지기 때문에 정보 업데이트가 되지 않음\n//revalidate 가 필요함 => regenerate 과정을 만든다!!\n//revalidate : 1 => 1초마다 데이터 갱신\n\nexport const getStaticProps = async () => {\n    //fetch data from an API\n    const client = await MongoClient.connect(mongoConnectionUrl);\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find().toArray();\n\n    await client.close();\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                image: meetup.image,\n                address: meetup.address,\n                description: meetup.description,\n                id: meetup.id.toString(),\n            }))\n        },\n        revalidate: 1,\n    };\n};\n\n//dynamically 갱신 하고 싶다면 server-side rendering 을 사용하자!!\n//only server-side! runs on the server!!\n// export const getServerSideProps = async (context) => {\n//     const request = context.req;\n//     const response = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}